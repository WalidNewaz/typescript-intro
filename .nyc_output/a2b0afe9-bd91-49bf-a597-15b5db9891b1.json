{"/Users/walidnewaz/tutorials/TypeScript/typescript-intro/src/Functions.ts":{"path":"/Users/walidnewaz/tutorials/TypeScript/typescript-intro/src/Functions.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":10,"column":9}},"2":{"start":{"line":6,"column":12},"end":{"line":6,"column":46}},"3":{"start":{"line":9,"column":12},"end":{"line":9,"column":29}},"4":{"start":{"line":13,"column":21},"end":{"line":13,"column":22}},"5":{"start":{"line":14,"column":8},"end":{"line":16,"column":11}},"6":{"start":{"line":15,"column":12},"end":{"line":15,"column":26}},"7":{"start":{"line":17,"column":8},"end":{"line":17,"column":22}},"8":{"start":{"line":27,"column":8},"end":{"line":27,"column":53}},"9":{"start":{"line":30,"column":0},"end":{"line":30,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":44},"end":{"line":11,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":24},"end":{"line":18,"column":5}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":21},"end":{"line":14,"column":22}},"loc":{"start":{"line":14,"column":30},"end":{"line":16,"column":9}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":52},"end":{"line":28,"column":5}},"line":26}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":8},"end":{"line":10,"column":9}},"type":"if","locations":[{"start":{"line":5,"column":8},"end":{"line":10,"column":9}},{"start":{"line":5,"column":8},"end":{"line":10,"column":9}}],"line":5},"1":{"loc":{"start":{"line":26,"column":39},"end":{"line":26,"column":50}},"type":"default-arg","locations":[{"start":{"line":26,"column":46},"end":{"line":26,"column":50}}],"line":26}},"s":{"0":1,"1":2,"2":1,"3":1,"4":4,"5":4,"6":6,"7":4,"8":2,"9":1},"f":{"0":2,"1":4,"2":6,"3":2},"b":{"0":[1,1],"1":[1]},"inputSourceMap":{"version":3,"file":"/Users/walidnewaz/tutorials/TypeScript/typescript-intro/src/Functions.ts","sources":["/Users/walidnewaz/tutorials/TypeScript/typescript-intro/src/Functions.ts"],"names":[],"mappings":";;AAAA,MAAqB,SAAS;IAC1B,kBAAkB,CAAC,SAAiB,EAAE,QAAiB;QACnD,IAAI,QAAQ,EAAE;YACV,OAAO,SAAS,GAAG,GAAG,GAAG,QAAQ,CAAC;SACrC;aAAM;YACH,OAAO,SAAS,CAAC;SACpB;IACL,CAAC;IAED,UAAU,CAAC,GAAG,IAAc;QACxB,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YACjB,MAAM,IAAI,GAAG,CAAC;QAClB,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;;;;;OAMG;IACH,gBAAgB,CAAC,SAAiB,EAAE,KAAa,EAAE,OAAe,IAAI;QAClE,OAAO,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,EAAE,KAAK,CAAC,CAAC;IACjD,CAAC;CACJ;AA3BD,4BA2BC","sourcesContent":["export default class Functions {\n    optionalParameters(firstName: string, lastName?: string): string {\n        if (lastName) {\n            return firstName + \" \" + lastName;\n        } else {\n            return firstName;\n        }\n    }\n\n    addNumbers(...nums: number[]): number {\n        let result = 0;\n        nums.forEach((num) => {\n            result += num;\n        });\n        return result;\n    }\n\n    /**\n     * Calculate compound interest\n     * @param principal \n     * @param years \n     * @param rate default rate is 5%\n     * @returns \n     */\n    compoundInterest(principal: number, years: number, rate: number = 0.05): number {\n        return principal * Math.pow(1 + rate, years);\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d6691f8f63600568f3b6781f702c3d3f474fe2a9","contentHash":"66fe6a6809fe19a4704a6f0b0db29362d98a291e8b26e34142cd3ae8b442e433"},"/Users/walidnewaz/tutorials/TypeScript/typescript-intro/src/Greeting.ts":{"path":"/Users/walidnewaz/tutorials/TypeScript/typescript-intro/src/Greeting.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":29}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":12},"end":{"line":7,"column":5}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/walidnewaz/tutorials/TypeScript/typescript-intro/src/Greeting.ts","sources":["/Users/walidnewaz/tutorials/TypeScript/typescript-intro/src/Greeting.ts"],"names":[],"mappings":";;;AAAA,MAAa,QAAQ;IACjB,KAAK;QACD,OAAO,aAAa,CAAA;IACxB,CAAC;CACJ;AAJD,4BAIC","sourcesContent":["export class Greeting {\n    greet(): string {\n        return \"Hello World\"\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ac4480e3e923d60024a1cd6536afafe180f37217","contentHash":"fb03296fdada862cc7e86388bb89d11f19abdc8e60c36e2d014f7887df1bd76a"},"/Users/walidnewaz/tutorials/TypeScript/typescript-intro/src/Tuples.ts":{"path":"/Users/walidnewaz/tutorials/TypeScript/typescript-intro/src/Tuples.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":12,"column":8},"end":{"line":12,"column":29}},"2":{"start":{"line":15,"column":0},"end":{"line":15,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":18},"end":{"line":13,"column":5}},"line":11}},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/walidnewaz/tutorials/TypeScript/typescript-intro/src/Tuples.ts","sources":["/Users/walidnewaz/tutorials/TypeScript/typescript-intro/src/Tuples.ts"],"names":[],"mappings":";;AAAA;;GAEG;AACH,MAAqB,MAAM;IACvB;;;OAGG;IACH,WAAW;QACP,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IACzB,CAAC;CACJ;AARD,yBAQC","sourcesContent":["/**\n * Tuples represent a fixed number of elements of different types.\n */\nexport default class Tuples {\n    /**\n     * Create a tuple\n     * @returns \n     */\n    createTuple(): [string, number] {\n        return [\"hello\", 10];\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"030cb0454d9ba1ad2b1efe5a362298b8d1401ab5","contentHash":"c257bec0f87ea11c720b9770aeb2c55edd9b7ce1be9954afce6c131fe5d586f2"},"/Users/walidnewaz/tutorials/TypeScript/typescript-intro/src/TypeAssertions.ts":{"path":"/Users/walidnewaz/tutorials/TypeScript/typescript-intro/src/TypeAssertions.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":6,"column":23},"end":{"line":6,"column":26}},"3":{"start":{"line":7,"column":23},"end":{"line":7,"column":31}},"4":{"start":{"line":9,"column":8},"end":{"line":9,"column":24}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":34},"end":{"line":10,"column":5}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/walidnewaz/tutorials/TypeScript/typescript-intro/src/TypeAssertions.ts","sources":["/Users/walidnewaz/tutorials/TypeScript/typescript-intro/src/TypeAssertions.ts"],"names":[],"mappings":";;;AAAA,MAAa,cAAc;IACvB,MAAM,CAAC,oBAAoB;QACvB,IAAI,QAAQ,GAAW,GAAG,CAAC;QAC3B,IAAI,QAAQ,GAAwB,QAAQ,CAAC,CAAC,gCAAgC;QAC9E,gCAAgC;QAChC,OAAO,QAAQ,CAAC;IACpB,CAAC;CACJ;AAPD,wCAOC","sourcesContent":["export class TypeAssertions {\n    static changeStringToNumber(): number {\n        let myString: string = \"1\";\n        let myNumber: number = <number><any>myString; // assert to any, then to number\n        // console.log(typeof myNumber);\n        return myNumber;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3ea74d6f4f56d250e72e63cad6d720d91aa8c00f","contentHash":"f6c420e99f61c3bd0a12fb00a7d8cd53f25a46d12f425c4ee6f5e1f88b8031f1"},"/Users/walidnewaz/tutorials/TypeScript/typescript-intro/src/Union.ts":{"path":"/Users/walidnewaz/tutorials/TypeScript/typescript-intro/src/Union.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":8,"column":8},"end":{"line":8,"column":37}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":30},"end":{"line":9,"column":5}},"line":7}},"branchMap":{},"s":{"0":1,"1":2,"2":1},"f":{"0":2},"b":{},"inputSourceMap":{"version":3,"file":"/Users/walidnewaz/tutorials/TypeScript/typescript-intro/src/Union.ts","sources":["/Users/walidnewaz/tutorials/TypeScript/typescript-intro/src/Union.ts"],"names":[],"mappings":";;AAAA;;GAEG;AACH,MAAqB,KAAK;IACtB,oBAAoB,CAAC,GAAoB;QACrC,OAAO,eAAe,GAAG,GAAG,CAAC;IACjC,CAAC;CACJ;AAJD,wBAIC","sourcesContent":["/**\n * Union types can be used to combine one or more types.\n */\nexport default class Union {\n    concatStringOrNumber(val: string | number): string {\n        return \"The value is \" + val;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9120077df833b3f9d099e849e1497d179f21f1d7","contentHash":"f9a59fdf2eec602003b553db474f370d8915c5d86b8291ceb8a9c54ac56ed48f"}}